from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

from selenium.webdriver.chrome.options import Options


#옵션 설정
chrome_options = Options()

# chrome_options.add_argument("user-data-dir=C:\\user_data\\as")  # 유저 정보파일 생성
# chrome_options.add_argument("disable-blink-features=AutomationControlled")  # 유저로 인식하는 옵션

chrome_options.add_argument("--start-maximized")    # 화면 최대
chrome_options.add_experimental_option("detach", True)  # 실행시 창이 꺼지지 않음

driver = webdriver.Chrome(options=chrome_options)
driver.get("https://naver.com")  # 홈페이지 창 띄우기


#  find_element 함수로 필요한 요소 찾기1
query = driver.find_element(By.ID, "query") # 검색창 id로 지정
# query = driver.find_element(By.CSS_SELECTOR, "#query")  # id
# query = driver.find_element(By.CSS_SELECTOR, ".query")  # class
# query = driver.find_element(By.XPATH, "")  # xpath

query.send_keys("네이버")   # 검색어 '네이버' 입력

search_btn = driver.find_element(By.ID, "search-btn")   # 버튼 찾기
search_btn.click()  # 버튼 클릭


#  find_element 함수로 필요한 요소 찾기2
driver.find_element(By.ID, "query").send_keys("네이버")

# driver.find_element(By.ID, "search-btn").click()
driver.find_element(By.ID, "query").send_keys(Keys.ENTER)  # 검색일시 클릭대신 ENTER키 사용으로도 가능


# driver.save_screenshot("네이버 검색.png")  # 스크린샷

driver.quit()  # 창 종료


### elements
result = driver.find_elements(By.CSS_SELECTOR, "")
for value in result:
  a = value.get_attribute("") # 속성값 가져오기
  print(a)  # 값 출력


### wait
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

driver = webdriver.Chrome(options=chrome_options)

wait = WebDriverWait(driver, 10) # 최대 10초까지 대기
target_element = wait.until(EC.element_to_be_clickable((By.ID, "some_dynamic_button_id")) ) # 인자로 튜플값 
    
print("요소가 성공적으로 클릭 가능한 상태가 되었습니다.")
target_element.click()

